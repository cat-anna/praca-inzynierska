/* 
 *  VisApp source file  
 *
 *  Release version: 1.1 December 2014
 *  File: VisApp/Plugins/TextImport/FileReader.h
 *  Author: Paweu
 *  Header Date: Sun Dec  7 18:03:47 GMT 2014
 *
 */
/*--END OF HEADER BLOCK--*/
/*
Generated by "D:\CommandLine\csrc.bat"
On 2014-03-05 21:06:04,03
by Paweu
*/

#ifndef FileReader_H
#define FileReader_H

struct LineImportSettings {
	char CollumnSeparator;
	bool IgnoreFollowingSepparators;
};

class FileReader {
public:
	FileReader(unsigned Settings = 0);
	virtual ~FileReader();

	bool IsGood() const { return m_Input && ((m_Flags & frf_good) > 0); }
	bool Finished() const { return (m_Flags & frf_finished) > 0; }
	float FilePos() const { return m_FilePos; }

	int DoReadBucket(ReadBucket &bucket);
	void DoReadLine(ReadBucket::LineVector &line);

	void SetInputStream(std::ifstream *stream) { m_Input = stream; }
	void SetLineSettings(const LineImportSettings &settings) { m_LineSettings = settings; }

	static index_t SplitLine(std::string& sline, ReadBucket::LineVector &out, const LineImportSettings &settings);
private:
	std::ifstream *m_Input;
	LineImportSettings m_LineSettings;

	float m_FilePos;
	unsigned m_Flags;

	enum {
		frf_good		= 0x0001,
		frf_finished	= 0x0002,
		frf_FileIsRead  = 0x0008,

		frf_InternalSettingsMask	= 0xFF,
	};

	FileReader(const FileReader&);//=delete;
	FileReader& operator=(const FileReader&);//=delete;
};

#endif
